<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boardapp.boardapi.common.mapper.master.MasterDatabaseMapper">
    <resultMap id="boardResultMap" type="com.boardapp.boardapi.board.model.Board">
        <id property="boardId" column="board_id" />
        <result property="boardId" column="board_id" />
        <result property="boardTitle" column="board_title" />
        <result property="boardContents" column="board_contents" />
        <result property="writeId" column="write_id" />
        <result property="modifyId" column="modify_id" />
        <result property="writeDate" column="write_date" />
        <result property="modifyDate" column="modify_date" />
    </resultMap>

    <resultMap id="boardWithUserResultMap" type="com.boardapp.boardapi.board.model.BaordWithUser">
        <id property="boardId" column="board_id" />
        <result property="boardId" column="board_id" />
    </resultMap>


    <!-- ! Board Table Query-->
    <sql id="where"> WHERE board_id = #{id} </sql>

    <sql id="user_column"> 
        ${alias}.user_id AS ${convert_alias}_id,                    
        ${alias}_name AS ${convert_alias}.user_name, 
        ${alias}.user_password AS ${convert_alias}_password,
        ${alias}.user_tel AS ${convert_alias}_tel, 
        ${alias}.user_address AS ${convert_alias}_address,
        ${alias}.detail_address AS ${convert_alias}_detail_address 
    </sql>

    <!-- 전체 게시글 조회 -->
    <select id="getAllBoards" resultType="com.boardapp.boardapi.board.model.Board">
        SELECT * 
        FROM board 
        ORDER BY board_id ASC </select>

    <!-- 전체 게시글을 사용자 정보와 함께 조회 -->
    <select id="getAllBoardsWithUser" resultType="com.boardapp.boardapi.board.model.BoardWithUser">
        SELECT A.*, 
              <include refid="user_column">
                <property name="alias" value="B" />
                <property name="convert_alias" value="write" />
              </include>
        FROM board A LEFT
        OUTER JOIN user B
        ON A.write_id = B.user_id </select>

    <!-- 특정 번호 게시글 조회 -->
    <select id="getByBoardId" resultType="com.boardapp.boardapi.board.model.Board">
        SELECT *
        FROM board
        WHERE board_id = #{id}
    </select>

    <!-- 특정 번호 게시글 관련 사용자까지 조회 -->
    <select id="getBoardWithUserByBoardId"
        resultType="com.boardapp.boardapi.board.model.BoardWithUser">
        SELECT A.*, B.*, C.* 
        FROM board A 
        LEFT OUTER JOIN user B 
        ON A.write_id = B.user_id 
        LEFT OUTER JOIN address C
        ON B.user_address = C.address 
        WHERE A.board_id = #{id}
    </select>

    <!-- 게시글 작성 -->
    <insert id="saveBoard" parameterType="com.boardapp.boardapi.board.model.Board"> INSERT INTO
        board ( board_title, board_contents, write_id, write_date ) VALUES ( #{boardObj.boardTitle},
        #{boardObj.boardContents}, #{boardObj.writeId}, #{boardObj.writeDate} ) </insert>

    <!-- 게시글 수정 -->
    <update id="updateBoard" parameterType="com.boardapp.boardapi.board.model.Board"> UPDATE board
        SET board_title = #{boardObj.boardTitle}, board_contents = #{boardObj.boardContents},
        modify_id = #{boardObj.modifyId}, modify_date = #{boardObj.modifyDate} WHERE board_id =
        #{id} </update>

    <!-- 게시글 삭제 -->
    <delete id="deleteBoard"> DELETE FROM board WHERE board_id = #{id} </delete>

    <!-- ! User Table Query-->
    <select id="getAllUser" resultType="com.boardapp.boardapi.user.model.User"> SELECT * FROM user </select>

    <select id="getAllUserWithAddress" resultType="com.boardapp.boardapi.user.model.UserWithAddress">
        SELECT A.*,B.* FROM user A LEFT OUTER JOIN address B ON A.user_address = B.address </select>

    <select id="getByUserId" resultType="com.boardapp.boardapi.user.model.User"> SELECT * FROM user
        WHERE user_id = #{userId} </select>


</mapper>